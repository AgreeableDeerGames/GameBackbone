#pragma once

#include <Util\Array2D.h>
#include <Util\DllUtil.h>
#include <Util\Point.h>

#include <SFML\Graphics\Sprite.hpp>

#include <set>
#include <tuple>
#include <map>

namespace GB {

    // This gets used by the Cluster generator.
    struct ClusterGenerationOptions {
        // What cluster is displayed as (could be sprite later)
        sf::Color colorOfCluster;
        // percent of points to be this cluster
        int percent;
    };

    class libGameBackbone Cluster {
    public:
        // also functions as the setter
        // random number generated by caller is passed in
		Cluster(Point2D<int> firstPoint, Point2D<int> dimensions, std::multimap<Point2D<int>, Cluster>& pointToClusterMap);

        //getter
		std::set<Point2D<int>>* Cluster::getClusterPoints();

		ClusterGenerationOptions* getClusterGenerationOptions();

        //setter
		void setClusterGenerationOptions(ClusterGenerationOptions* OptionsForThisCluster);

		bool addPointToCluster(int randomNumber);
		int getNumberBorderPoints();

    private:
        // This moves the border's iterator some number, maintaining the circular border
		void moveIterator(int numberToMove);

		void UpdateBorder(Point2D<int> pointToAdd);

        // Dimensions of the graph
		Point2D<int> dimensionsOfGrid;
        std::multimap<Point2D<int>, Cluster>* pointToClusterMap;

        // Set of all points of the Array2D which are owned by this cluster
        std::set<Point2D<int>> clusterPointSet;

        std::set<Point2D<int>> borderPointSet;
        std::set<Point2D<int>>::iterator borderPointSetIter;

        ClusterGenerationOptions clusterOptions;
    };
}