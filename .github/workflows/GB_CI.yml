name: GB_CI

on:
  push:
    branches: [ master, develop, feature/GitHubActions ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: setup environment
      run: |
        sudo apt install libx11-dev xorg-dev libglu1-mesa-dev freeglut3-dev libglew1.5 libglew1.5-dev libglu1-mesa libgl1-mesa-glx libgl1-mesa-dev
        sudo apt install libpthread-stubs0-dev libxrandr-dev libfreetype6-dev libopenal-dev libudev-dev libvorbis-dev libflac-dev
    #    sudo apt install valgrind xvfb

    - name: Cache SFML
      id: Cache-Linux-SFML
      uses: actions/cache@v1
      with:
        path: SFML/Install
        key: ${{ runner.os }}-sfml-2_5_x_b

    - name: Build SFML
      if: steps.Cache-Linux-SFML.outputs.cache-hit != 'true'
      run: |
        mkdir SFML
        cd SFML
        git clone --single-branch --branch 2.5.x https://github.com/SFML/SFML.git
        cd SFML
        cmake . -DCMAKE_INSTALL_PREFIX="../Install"
        make
        sudo make install
        cd ../..

    - name: Cache Boost
      id: Cache-Linux-Boost
      uses: actions/cache@v1
      with:
        path: boost/Install/
        key: ${{ runner.os }}-boost_1_72_0

    - name: Build Boost
      if: steps.Cache-Linux-Boost.outputs.cache-hit != 'true'
      run: |
        mkdir boost
        cd boost
        wget https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.tar.gz
        tar -xzf boost_1_72_0.tar.gz
        cd boost_1_72_0
        ./bootstrap.sh --with-libraries=test --prefix=../Install
        sudo ./b2 install
        cd ../..

    - name: Build GameBackbone
      run: |
        mkdir GB_Build_Dir
        cd GB_Build_Dir/
        cmake ../ -DGAMEBACKBONE_BUILD_TESTS=ON -DSFML_DIR="../SFML/Install/lib/cmake/SFML" -DBoost_DIR="../boost/Install/lib/cmake/Boost-1.72.0"
        make

    #- name: setup Xvfb
    #  run: |
    #    Xvfb :99 &

    #- name: Test
    #  run: |
    #    cd GameBackboneSln/build/bin
    #    ./GameBackboneUnitTest
    #  env:
    #    DISPLAY: :99

    #- name: Valgrind
    #  run: |
    #    cd GameBackboneSln/build/bin
    #    valgrind ./GameBackboneUnitTest
    #  env:
    #    DISPLAY: :99


  build_windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
        
    - name: Cache SFML
      id: Cache-Windows-SFML
      uses: actions/cache@v1
      with:
        path: SFML/Install
        key: ${{ runner.os }}-x86-sfml-2_5_x_b

    - name: Build SFML
      if: steps.Cache-Windows-SFML.outputs.cache-hit != 'true'
      run: |
        mkdir SFML
        cd SFML
        git clone --single-branch --branch 2.5.x https://github.com/SFML/SFML.git
        mkdir Install
        cd SFML
        cmake . -DCMAKE_INSTALL_PREFIX="../Install"
        cmake --build . --config Debug --target INSTALL
        cd ../..

    - name: Build GameBackbone
      run: |
        mkdir GB_Build_Dir
        cd GB_Build_Dir/
        cmake ../ -DGAMEBACKBONE_BUILD_TESTS=ON -DSFML_DIR="../SFML/Install/lib/cmake/SFML"
        cmake --build . --config Debug
        cd ../

    - name: Test
      run: |
        cd GB_Build_Dir
        Copy-Item -Path ../SFML/Install/bin/* -Destination ./bin/Debug
        ctest . -C Debug
        cd ..

    - name: Clang Tidy
      continue-on-error: "true"
      run: |
        cd GB_Build_Dir
        cmake ../ -DGAMEBACKBONE_RUN_CLANG_TIDY=ON
        cmake --build . --config Debug
